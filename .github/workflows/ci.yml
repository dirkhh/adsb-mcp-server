name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        uv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. Line length set to 140
        uv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=140 --statistics

    - name: Check code formatting with black
      run: |
        uv run black --line-length=140 --check --diff .

    - name: Check import sorting with isort
      run: |
        uv run isort --check-only --diff .

    - name: Type checking with mypy
      run: |
        uv run mypy . --ignore-missing-imports || true

    - name: Test imports and basic functionality
      run: |
        uv run python -c "
        # Test main server import
        from readsb_mcp_server import ReadsbMCPServer
        print('✅ Main server imports successfully')

        # Test shared utilities import
        from shared_utils import get_remote_host_and_port
        print('✅ Shared utilities import successfully')

        # Test server initialization
        server = ReadsbMCPServer('http://localhost:8080')
        print('✅ Server initializes successfully')

        print('✅ All basic tests passed')
        "

    - name: Test script imports
      run: |
        # Test that test scripts can import their dependencies
        python -c "
        import sys
        import os
        sys.path.insert(0, './test')

        # Test test script imports
        from test_remote_connection import test_remote_mcp_server
        from remote_mcp_client import RemoteMCPClient
        from debug_mcp_server import debug_connection

        print('✅ All test scripts import successfully')
        "

    - name: Check for common issues
      run: |
        # Check for TODO/FIXME comments
        if grep -r "TODO\|FIXME" . --include="*.py" --exclude-dir=.git --exclude-dir=venv; then
          echo "⚠️  Found TODO/FIXME comments - consider addressing them"
        fi

        # Check for print statements (should use logging instead)
        if grep -r "print(" . --include="*.py" --exclude-dir=.git --exclude-dir=test --exclude-dir=venv --exclude="setup_remote_config.py"; then
          echo "⚠️  Found print statements in non-test files - consider using logging"
        fi

        # Check for hardcoded paths
        if grep -r "/Users/\|/home/\|C:\\\\" . --include="*.py" --exclude-dir=.git --exclude-dir=venv; then
          echo "❌ Found hardcoded paths - these should be relative or configurable"
          exit 1
        fi

        echo "✅ No major issues found"

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Test MCP Bundle creation
      run: |
        # Install MCPB tool globally
        npm install -g @anthropic-ai/mcpb

        # Test bundle creation with official mcpb tool
        mcpb pack .

        # Verify bundle was created
        BUNDLE_FILE=$(ls *.mcpb | head -n 1)
        if [ -z "$BUNDLE_FILE" ]; then
          echo "❌ MCP bundle was not created!"
          exit 1
        fi

        BUNDLE_SIZE=$(stat -c%s "$BUNDLE_FILE")
        echo "Bundle size: $BUNDLE_SIZE bytes"

        if [ $BUNDLE_SIZE -lt 1000 ]; then
          echo "❌ Bundle size seems too small ($BUNDLE_SIZE bytes)"
          exit 1
        fi

        echo "✅ MCP Bundle created successfully: $BUNDLE_FILE"

        # Clean up
        rm -f *.mcpb
        echo "✅ MCP Bundle creation test passed"
