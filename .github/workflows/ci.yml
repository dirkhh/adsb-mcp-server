name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [18, 20, 22]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: |
        npm ci

    - name: Build project
      run: |
        npm run build

    - name: Lint with ESLint
      run: |
        npm run lint

    - name: Check code formatting with Prettier
      run: |
        npm run format -- --check

    - name: Type checking with TypeScript
      run: |
        npm run type-check

    - name: Test imports and basic functionality
      run: |
        # Test main server import
        node -e "
        import('./dist/src/readsb_mcp_server.js').then(() => {
          console.log('✅ Main server imports successfully');
        }).catch(err => {
          console.error('❌ Main server import failed:', err);
          process.exit(1);
        });
        "

    - name: Check for hardcoded paths
      run: |
        if grep -r "/Users/" . --exclude-dir=node_modules --exclude-dir=.git; then
          echo "❌ Found hardcoded paths"
          exit 1
        else
          echo "✅ No hardcoded paths found"
        fi

    - name: Check for TODO/FIXME comments
      run: |
        if grep -r "TODO\|FIXME" . --exclude-dir=node_modules --exclude-dir=.git; then
          echo "⚠️  Found TODO/FIXME comments (not blocking)"
        else
          echo "✅ No TODO/FIXME comments found"
        fi

    - name: Check for console.log statements
      run: |
        if grep -r "console\.log" src/ test/ --exclude="setup_remote_config.ts"; then
          echo "❌ Found console.log statements (should use logger)"
          exit 1
        else
          echo "✅ No console.log statements found"
        fi

    - name: Test MCP Bundle creation
      run: |
        # Install MCPB tool
        npm install -g @anthropic-ai/mcpb

        # Test bundle creation
        mcpb pack .

        # Verify bundle exists
        if [ -f "adsb-mcp-server.mcpb" ]; then
          echo "✅ Bundle created successfully"
          ls -la adsb-mcp-server.mcpb

          # Check bundle size (should be reasonable)
          BUNDLE_SIZE=$(stat -c%s "adsb-mcp-server.mcpb")
          if [ $BUNDLE_SIZE -lt 1000000 ]; then
            echo "✅ Bundle size is reasonable: $BUNDLE_SIZE bytes"
          else
            echo "⚠️  Bundle size is large: $BUNDLE_SIZE bytes"
          fi

          # Verify manifest exists in bundle
          unzip -l adsb-mcp-server.mcpb | grep manifest.json && echo "✅ Manifest found in bundle"
        else
          echo "❌ Bundle creation failed"
          exit 1
        fi
